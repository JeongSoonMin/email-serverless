frameworkVersion: '3'
variablesResolutionMode: 20210326
# 서비스 명
service: email-serverless

custom:
  # gateway 및 네트워크 관련 설정
  config: ${file(serverless-config/${sls:stage}/config.yml)}
  # database 설정
  database: ${file(serverless-config/${sls:stage}/database.yml)}

provider:
  name: aws
  runtime: nodejs18.x
  lambdaHashingVersion: 20201221
  # 배포 환경(기본값 dev). sls deploy or sls offline start 시 옵션 -s (stage | local) 과 같이 설정하여 배포 및 테스트 가능.
  stage: dev
  region: ap-northeast-2
  # CloudFormation에 {서비스명}-{환경} 명으로 stack이 생성 된다.
  stackName: ${self:service}-${sls:stage}
  # 로그 보존 기간
  logRetentionInDays: 1
  # 전역 환경 변수
  environment:
    # 배포 된 환경 profile 정보
    PROFILE: ${sls:stage}
    # logging 에서 사용되는 서비스 명 환경 변수
    SERVICE: ${self:service}
  # lambda role 공통 지정
  iam:
    role: arn:aws:iam::533267109492:role/lambda-common-role

package:
  # 경로별 개별 압축 설정으로, true로 사용
  individually: true
  # 각 lambda 펑션에서 기본 패키지에 포함된 내용은 배포 제외되도록 설정
  # 공통 logging, response 처리 스크립트 포함
  patterns:
    - '!.idea/**'
    - '!serverless-config/**'
    - '!package.json'
    - '!package-lock.json'
    - '!readme.md'
    - '!.gitignore'
    - '!.npmignore'

functions:
  # function 명 지정(lambda 명칭 생성 규칙이 '{서비스명}-{stage}-{펑션명}' 으로 생성 된다.
  emailService:
    # lambda 호출시 실행 될 function
    handler: index.handler
    description: ${self:service} function
    # lambda 동작 메모리 설정. 최소 128 ~ 해당 function에서 무거운 작업이 필요한 경우 늘려준다. cloudwatch 로그에서 동작하는데 사용된 메모리 확인 가능.
    memorySize: 128
    # lambda 동작 timeout 설정.
    timeout: 10
    # lambda function vpc 설정 필요시 사용 정보(RDS 및 각 환경VPC 설정 필요한 경우에만 사용.
    # vpc 할당시 내부 네트워크 IP 할당 시간 지연이 발생하여 약간의 lambda function load 지연 발생
#    vpc: ${self:custom.config.functions.vpc}
    # 펑션 내에서 사용 되는 환경 변수(불필요시 삭제)
    environment:
      DOCUMENT_DB_PRIMARY_HOST: ${self:custom.database.documentDbPrimary.host}
      DOCUMENT_DB_PRIMARY_PORT: ${self:custom.database.documentDbPrimary.port}
      DOCUMENT_DB_PRIMARY_USERNAME: ${self:custom.database.documentDbPrimary.username}
      DOCUMENT_DB_PRIMARY_PASSWORD: ${self:custom.database.documentDbPrimary.password}
      DOCUMENT_DB_PRIMARY_DATABASE: ${self:custom.database.documentDbPrimary.database}

      DOCUMENT_DB_SECONDARY_HOST: ${self:custom.database.documentDbSecondary.host}
      DOCUMENT_DB_SECONDARY_PORT: ${self:custom.database.documentDbSecondary.port}
      DOCUMENT_DB_SECONDARY_USERNAME: ${self:custom.database.documentDbSecondary.username}
      DOCUMENT_DB_SECONDARY_PASSWORD: ${self:custom.database.documentDbSecondary.password}
      DOCUMENT_DB_SECONDARY_DATABASE: ${self:custom.database.documentDbSecondary.database}
    # api-gateway 연결할 endpoint 설정
    events:
      ## SQS 이벤트 polling
      - sqs:
          arn: arn:aws:sqs:ap-northeast-2:533267109492:email-send-queue-dev
